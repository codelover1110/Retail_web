{"version":3,"sources":["http-common.js","components/ddos.js","components/TimeChart.js","App.js","reportWebVitals.js","actions/types.js","reducers/tutorials.js","reducers/index.js","store.js","index.js"],"names":["axios","create","baseURL","headers","style","styler","key","color","width","dashed","ddos","props","handleTrackerChanged","t","scale","setState","tracker","trackerEventUpplimit","upperlimit","at","bisect","trackerEventOutLower","lowerlimit","trackerEventOutMid","midpoint","trackerEventOutVwap","vwap","trackerX","handleTimeRangeChange","timerange","handleRescale","handleActiveChange","active","state","renderChart","charts","push","axis","series","columns","interpolation","trackerInfoValues","label","value","get","darkAxis","stroke","fill","fontWeight","fontSize","font","values","ticks","opacity","title","borderRadius","borderStyle","borderWidth","borderColor","timeAxisStyle","titleStyle","padding","paddingTop","paddingBottom","enablePanZoom","onTimeRangeChanged","timeRange","range","maxTime","end","minTime","begin","trackerPosition","onTrackerChanged","height","trackerInfoWidth","trackerInfoHeight","infoStyle","id","hideAxisLine","transition","labelOffset","min","max","format","type","_","debounce","rescale","connections","this","crop","className","React","Component","ddosData","require","midpointArr","each","val","timestamp","moment","Date","httpRequests","toDate","getTime","SeriesInitial","TimeSeries","name","points","TutorialsList","useState","selectedOptionExch","setSelectedOptionExch","selectedOptionTable","setSelectedOptionTable","selectedOptionSymbol","setSelectedOptionSymbol","selectedOptionInterval","setSelectedOptionInterval","selectStart","setSelectStart","selectEnd","setSelectEnd","midpointSeries","setMidpointSerines","vwapSeries","setVwapSeries","upperlimitSeries","setUpperlimitSeries","lowerlimitSeries","setLowerlimitSeries","maxVal","setMaxVal","minVal","setMinVal","convertDate","data","y_data","_d","getFullYear","m_data","getMonth","d_data","getDate","h_data","getHours","min_data","getMinutes","s_data","getSeconds","onChange","options","inputProps","placeholder","marginTop","onClick","table_name","requestOptions","method","body","JSON","stringify","interval","start_time","end_time","fetch","then","response","json","chart_data","length","maxSeriesTemp","minSeriesTemp","alert","App","href","to","exact","path","component","TimeChart","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CREATE_TUTORIAL","RETRIEVE_TUTORIALS","UPDATE_TUTORIAL","DELETE_TUTORIAL","DELETE_ALL_TUTORIALS","initialState","tutorialReducer","tutorials","action","payload","map","tutorial","filter","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.caa3c065.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n","import React from \"react\";\nimport _ from \"underscore\";\nimport moment from \"moment\";\n\nimport {\n    Resizable,\n    Charts,\n    ChartContainer,\n    ChartRow,\n    YAxis,\n    LineChart,\n    styler,\n    ScatterChart\n  } from \"react-timeseries-charts\";\n\n\nconst style = styler([\n    { key: \"upperlimit\", color: \"#7030A0\", width: 1, dashed: true },\n    { key: \"lowerlimit\", color: \"#7030A0\", width: 1, dashed: true },\n    { key: \"midpoint\", color: \"#0070C0\", width: 1 },\n    { key: \"vwap\", color: \"#404040\", width: 1 },\n]);\n\nclass ddos extends React.Component {\n   \n    constructor(props) {\n        super(props);\n        this.handleRescale = _.debounce(this.rescale, 300);\n        this.state = {\n            max: this.props.max,\n            min: this.props.min,\n            active: {\n                midpoint: true,\n                connections: false\n            },\n            timerange: this.props.midpoint.range(),\n            tracker: null,\n    \n        };\n    \n    }\n\n    componentWillReceiveProps() {\n        this.setState({\n            'max': this.props.max,\n            'min': this.props.min,\n            'timerange': this.props.midpoint.range()\n        })\n    }\n\n    rescale(timerange, active = this.state.active) {\n        this.setState({\n            'max': this.props.upperlimit.crop(this.state.timerange).max(\"upperlimit\"),\n            'min': this.props.lowerlimit.crop(this.state.timerange).min(\"lowerlimit\")\n        })\n    }\n\n    handleTrackerChanged = (t, scale) => {\n        this.setState({\n          tracker: t,\n          trackerEventUpplimit: t && this.props.upperlimit.at(this.props.upperlimit.bisect(t)),\n          trackerEventOutLower: t && this.props.lowerlimit.at(this.props.lowerlimit.bisect(t)),\n          trackerEventOutMid: t && this.props.midpoint.at(this.props.midpoint.bisect(t)),\n          trackerEventOutVwap: t && this.props.vwap.at(this.props.vwap.bisect(t)),\n          trackerX: t && scale(t)\n        });\n    }\n\n    handleTimeRangeChange = timerange => {\n        this.setState({ timerange });\n        this.handleRescale(timerange);\n    };\n\n    handleActiveChange = key => {\n        const active = this.state.active;\n        active[key] = !active[key];\n        this.setState({ active });\n        this.handleRescale(this.state.timerange, active);\n    };\n\n    renderChart = () => {\n        let charts = [];\n        charts.push(\n            <LineChart\n                key=\"upperlimit\"\n                axis=\"axis1\"\n                series={this.props.upperlimit}\n                columns={[\"upperlimit\"]}\n                style={style}\n                interpolation=\"curveBasis\"\n            />\n        );\n\n        charts.push(\n            <LineChart\n                key=\"lowerlimit\"\n                axis=\"axis1\"\n                series={this.props.lowerlimit}\n                columns={[\"lowerlimit\"]}\n                style={style}\n                interpolation=\"curveBasis\"\n            />\n        );\n\n        charts.push(\n            <LineChart\n                key=\"vwap\"\n                axis=\"axis1\"\n                series={this.props.vwap}\n                columns={[\"vwap\"]}\n                style={style}\n                interpolation=\"curveBasis\"\n            />\n        );\n        \n        charts.push(\n            <LineChart\n                key=\"midpoint\"\n                axis=\"axis1\"\n                series={this.props.midpoint}\n                columns={[\"midpoint\"]}\n                style={style}\n                interpolation=\"curveBasis\"\n            />\n        );   \n\n        charts.push(\n            <ScatterChart\n                key=\"vwap\"\n                axis=\"axis1\"\n                series={this.props.vwap}\n                columns={[\"vwap\"]}\n                style={style}\n                interpolation=\"curveBasis\"\n            />\n        );\n\n        const trackerInfoValues = [\n            {\n              label: \"upperlimit\",\n              value:\n                this.state.tracker == null\n                  ? \"\"\n                  : this.state.trackerEventUpplimit.get(\"upperlimit\")\n            },\n            {\n              label: \"lowerlimit\",\n              value:\n                this.state.tracker == null\n                  ? \"\"\n                  : this.state.trackerEventOutLower.get(\"lowerlimit\")\n            },\n            {\n              label: \"vwap\",\n              value:\n                this.state.tracker == null\n                  ? \"\"\n                  : this.state.trackerEventOutVwap.get(\"vwap\")\n            },\n            {\n              label: \"midpoint\",\n              value:\n                this.state.tracker == null\n                  ? \"\"\n                  : this.state.trackerEventOutMid.get(\"midpoint\")\n            }\n\n        ]\n\n        const darkAxis = {\n            label: {\n                stroke: \"none\",\n                fill: \"#AAA\", // Default label color\n                fontWeight: 200,\n                fontSize: 14,\n                font: '\"Goudy Bookletter 1911\", sans-serif\"'\n            },\n            values: {\n                stroke: \"none\",\n                fill: \"#888\",\n                fontWeight: 100,\n                fontSize: 11,\n                font: '\"Goudy Bookletter 1911\", sans-serif\"'\n            },\n            ticks: {\n                fill: \"none\",\n                stroke: \"#AAA\",\n                opacity: 0.2\n            },\n            axis: {\n                fill: \"none\",\n                stroke: \"#AAA\",\n                opacity: 1\n            }\n        };\n\n        return (\n            <ChartContainer\n                title=\"Upperlimit | LowerLimit | Vwap | MidPoint\"\n                style={{\n                    // background: \"#201d1e\",\n                    borderRadius: 8,\n                    borderStyle: \"solid\",\n                    borderWidth: 1,\n                    borderColor: \"#232122\"\n                }}\n                timeAxisStyle={darkAxis}\n                titleStyle={{\n                    color: \"#EEE\",\n                    fontWeight: 500\n                }}\n                padding={20}\n                paddingTop={5}\n                paddingBottom={0}\n                enablePanZoom={true}\n                // enableDragZoom\n                onTimeRangeChanged={this.handleTimeRangeChange}\n                // timeRange={this.state.timerange}\n                timeRange={this.state.timerange ? this.state.timerange : this.props.midpoint.range()}\n                maxTime={this.props.midpoint.range().end()}\n                minTime={this.props.midpoint.range().begin()}\n                trackerPosition={this.state.tracker}\n                onTrackerChanged={this.handleTrackerChanged}\n            >\n                <ChartRow \n                    height=\"500\"\n                    trackerInfoValues={trackerInfoValues}\n                    trackerInfoWidth={200}\n                    trackerInfoHeight={80}\n                    infoStyle={{ fill: \"white\", stroke:\"black\" }}\n                >\n                    <YAxis\n                        id=\"axis1\"\n                        // label=\"midpoint\"\n                        // showGrid\n                        hideAxisLine\n                        transition={300}\n                        style={darkAxis}\n                        labelOffset={-10}\n                        min={this.state.min}\n                        max={this.state.max}\n                        format=\",.0f\"\n                        width=\"60\"\n                        type=\"linear\"\n                    />\n                    <Charts>{charts}</Charts>\n                </ChartRow>\n            </ChartContainer>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <Resizable>{this.renderChart()}</Resizable>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ddos","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport http from \"../http-common\";\nimport axios from \"axios\";\nimport Select from 'react-select'\nimport 'react-select/dist/react-select.css';\n\nimport _ from \"underscore\";\nimport moment from \"moment\";\n\nimport { TimeSeries, Index } from \"pondjs\";\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\nimport Ddos from \"./ddos\";\n\nconst ddosData = require(\"./ddos_data.json\");\nconst midpointArr = [];\n\n_.each(ddosData, val => {\n  const timestamp = moment(new Date(`2015-04-03T${val[\"time PST\"]}`));\n  const httpRequests = val[\"http requests\"];\n  midpointArr.push([timestamp.toDate().getTime(), httpRequests]);\n});\n\nconst SeriesInitial = new TimeSeries({\n  name: \"midpoint\",\n  columns: [\"time\", \"midpoint\"],\n  points: midpointArr\n});\n\n\n\nconst TutorialsList = () => {\n  const [selectedOptionExch, setSelectedOptionExch] = useState(null);\n  const [selectedOptionTable, setSelectedOptionTable] = useState(null);\n  const [selectedOptionSymbol, setSelectedOptionSymbol] = useState(null);\n  const [selectedOptionInterval, setSelectedOptionInterval] = useState(null);\n  const [selectStart, setSelectStart] = useState(null)\n  const [selectEnd, setSelectEnd] = useState(null)\n  const [midpointSeries, setMidpointSerines] = useState(SeriesInitial)\n  const [vwapSeries, setVwapSeries] = useState(SeriesInitial)\n  const [upperlimitSeries, setUpperlimitSeries] = useState(SeriesInitial)\n  const [lowerlimitSeries, setLowerlimitSeries] = useState(SeriesInitial)\n  const [maxVal, setMaxVal] = useState(35000)\n  const [minVal, setMinVal] = useState(30000)\n\n  // useEffect(() => {\n  //   get_table_list()\n  // }, []);\n\n  const handleChangeExch = (value) => {\n    setSelectedOptionExch(value)\n  }\n\n  const handleChangeTable = (value) => {\n    setSelectedOptionTable(value)\n  }\n\n  const handleChangeSymbol = (value) => {\n    setSelectedOptionSymbol(value)\n  }\n\n  const handleChangeInterval = (value) => {\n    setSelectedOptionInterval(value)\n  }\n\n  const optionsInterval = [\n    { value: '1', label: '1m' },\n    { value: '5', label: '5m' },\n    { value: '15', label: '15m' },\n    { value: '30', label: '30m' },\n    { value: '60', label: '60m' },\n    { value: '50', label: '50m' },\n    { value: '500', label: '500m' }\n  ]\n\n  const optionsTable = [\n    { value: 'candles', label: 'candles' },\n    { value: 'block_candles', label: 'block_candles' },\n    { value: 'group_candles', label: 'group_candles' }\n  ]\n\n  const optionsExch = [\n    { value: 'krkn', label: 'kraken' },\n    { value: 'btrx', label: 'bittrex' },\n  ]\n\n  const optionsSymbol = [\n    { value: 'btcusd', label: 'btc' },\n    { value: 'ethusd', label: 'eth' },\n  ]\n\n  const convertDate = (data) => {\n    if (data == null) {\n      return null\n    }\n\n    let y_data = data._d.getFullYear()\n    let m_data = data._d.getMonth() >= 10 ? data._d.getMonth()+1 : '0'+(data._d.getMonth()+1)\n    let d_data = data._d.getDate() >= 10 ? data._d.getDate() : '0'+data._d.getDate()\n    let h_data = data._d.getHours() >= 10 ? data._d.getHours(): '0'+data._d.getHours()\n    let min_data = data._d.getMinutes() >= 10 ? data._d.getMinutes(): '0'+data._d.getMinutes()\n    let s_data = data._d.getSeconds() >= 10 ? data._d.getSeconds(): '0'+data._d.getSeconds()\n    let temp_data = `${y_data}-${m_data}-${d_data} ${h_data}:${min_data}:${s_data}`\n    return temp_data\n  }\n\n  const showResut = () => {\n    if (selectedOptionExch == null || selectedOptionInterval == null || selectedOptionSymbol == null || selectedOptionTable == null || selectStart == null ) {\n      alert('Need to select values Exch, Interval, Symbol, Table, StartTime')\n      return\n    }\n    let table_name = `${selectedOptionTable.value}_${selectedOptionExch.value}_${selectedOptionSymbol.value}`\n  \n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ \n        interval: selectedOptionInterval.value,\n        table_name: table_name,\n        start_time: convertDate(selectStart),\n        end_time: convertDate(selectEnd),\n      })\n    };\n\n    fetch('https://caats.ngrok.io/api/get_data', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n\n          if (data.chart_data.midpoint.length > 0) {\n              let maxSeriesTemp = new TimeSeries({\n                name: \"upperlimit\",\n                columns: [\"time\", \"upperlimit\"],\n                points: data.chart_data.upperlimit\n              })\n              let minSeriesTemp = new TimeSeries({\n                name: \"lowerlimit\",\n                columns: [\"time\", \"lowerlimit\"],\n                points: data.chart_data.lowerlimit\n              })\n              setMaxVal(maxSeriesTemp.crop(maxSeriesTemp).max(\"upperlimit\"))\n              setMinVal(minSeriesTemp.crop(minSeriesTemp).min(\"lowerlimit\"))\n\n              setMidpointSerines(\n                new TimeSeries({\n                  name: \"midpoint\",\n                  columns: [\"time\", \"midpoint\"],\n                  points: data.chart_data.midpoint\n                })\n              )\n\n              setVwapSeries(\n                new TimeSeries({\n                  name: \"vwap\",\n                  columns: [\"time\", \"vwap\"],\n                  points: data.chart_data.vwap\n                })\n              );\n              setUpperlimitSeries(\n                new TimeSeries({\n                  name: \"upperlimit\",\n                  columns: [\"time\", \"upperlimit\"],\n                  points: data.chart_data.upperlimit\n                })\n              );\n              setLowerlimitSeries(\n                new TimeSeries({\n                  name: \"lowerlimit\",\n                  columns: [\"time\", \"lowerlimit\"],\n                  points: data.chart_data.lowerlimit\n                })\n              )\n          }\n          else {\n            setMidpointSerines(SeriesInitial)\n            setLowerlimitSeries(SeriesInitial)\n            setUpperlimitSeries(SeriesInitial)\n            setVwapSeries(SeriesInitial)\n          }\n        });\n\n  }\n\n  return (\n    <div>\n      <div className=\"main-container row\">\n        <div className=\"col-md-11\">          \n          <div className=\"row mt-3\">\n              <div className=\"col-md-2\">\n                <div className=\"select-wrape\">\n                  <label>\n                    <strong>Exchange:</strong>\n                  </label>\n                  <Select\n                    value={selectedOptionExch}\n                    onChange={handleChangeExch}\n                    options={optionsExch}\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-2\">\n                <div className=\"select-wrape\">\n                  <label>\n                    <strong>Symbol:</strong>\n                  </label>\n                  <Select\n                    value={selectedOptionSymbol}\n                    onChange={handleChangeSymbol}\n                    options={optionsSymbol}\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-2\">\n                <div className=\"select-wrape\">\n                  <label>\n                    <strong>Candle:</strong>\n                  </label>\n                  <Select\n                    value={selectedOptionTable}\n                    onChange={handleChangeTable}\n                    options={optionsTable}\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-2\">\n                <div className=\"select-wrape\">\n                  <label>\n                    <strong>Interval:</strong>\n                  </label>\n                  <Select\n                    value={selectedOptionInterval}\n                    onChange={handleChangeInterval}\n                    options={optionsInterval}\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-2\">\n                <div className=\"select-wrape\">\n                  <label>\n                    <strong>Start Time:</strong>\n                  </label>\n                  <Datetime onChange={(value) => setSelectStart(value)} inputProps={{placeholder: 'DD-MM-YYYY HH:mm'}}/>\n                </div>\n              </div>\n              <div className=\"col-md-2\">\n                <div className=\"select-wrape\">\n                  <label>\n                    <strong>End Time:</strong>\n                  </label>\n                  <Datetime\n                    onChange={(value) => setSelectEnd(value)}\n                    inputProps={{placeholder: 'DD-MM-YYYY HH:mm'}}\n                  />\n                </div>\n              </div>\n          </div>\n        </div>\n        <div className=\"col-md-1 d-flex justify-content-center align-items-center\">\n          <button className=\"btn btn-success\" style={{marginTop: 45}} onClick={showResut}>\n            Show\n          </button>\n        </div>\n      </div>  \n      <div>\n        <div className=\"p-3 m-4 border border-muted\">\n          <Ddos \n            midpoint = {midpointSeries}\n            vwap = {vwapSeries}\n            upperlimit = {upperlimitSeries}\n            lowerlimit = {lowerlimitSeries}\n            max = {maxVal}\n            min = {minVal}\n          />\n        </div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default TutorialsList;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport TimeChart from \"./components/TimeChart\";\n\nfunction App() {\n  return (\n    <Router>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/chart\" className=\"navbar-brand\">\n          CAATS \n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/chart\"} className=\"nav-link\">\n              TimeSeriesChart\n            </Link>\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/chart\"]} component={TimeChart} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CREATE_TUTORIAL = \"CREATE_TUTORIAL\";\nexport const RETRIEVE_TUTORIALS = \"RETRIEVE_TUTORIALS\";\nexport const UPDATE_TUTORIAL = \"UPDATE_TUTORIAL\";\nexport const DELETE_TUTORIAL = \"DELETE_TUTORIAL\";\nexport const DELETE_ALL_TUTORIALS = \"DELETE_ALL_TUTORIALS\";","import {\n  CREATE_TUTORIAL,\n  RETRIEVE_TUTORIALS,\n  UPDATE_TUTORIAL,\n  DELETE_TUTORIAL,\n  DELETE_ALL_TUTORIALS,\n} from \"../actions/types\";\n\nconst initialState = [];\n\nconst tutorialReducer = (tutorials = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CREATE_TUTORIAL:\n      return [...tutorials, payload];\n\n    case RETRIEVE_TUTORIALS:\n      return payload;\n\n    case UPDATE_TUTORIAL:\n      return tutorials.map((tutorial) => {\n        if (tutorial.id === payload.id) {\n          return {\n            ...tutorial,\n            ...payload,\n          };\n        } else {\n          return tutorial;\n        }\n      });\n\n    case DELETE_TUTORIAL:\n      return tutorials.filter(({ id }) => id !== payload.id);\n\n    case DELETE_ALL_TUTORIALS:\n      return [];\n\n    default:\n      return tutorials;\n  }\n};\n\nexport default tutorialReducer;","import { combineReducers } from \"redux\";\nimport tutorials from \"./tutorials\";\n\nexport default combineReducers({\n  tutorials,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}